class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        if len(digits) == 0:
            return []
        letters = {"2": "abc", "3": "def", "4": "ghi", "5": "jkl", 
                   "6": "mno", "7": "pqrs", "8": "tuv", "9": "wxyz"}
        res = []
        n = len(digits)

        def backtrack(idx, curr):
            if len(curr) == n:
                res.append("".join(curr))
                return
            
            for letter in letters[digits[idx]]:
                curr.append(letter)
                backtrack(idx + 1, curr)
                curr.pop()
    
        backtrack(0, [])
        return res
